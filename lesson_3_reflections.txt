When would you want to use a remote repository rather than keeping all your work local?
I would use a remote repository when I want to share my work with others or have it accessible from the web.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Because the changes that I commit might not solve the entire problem, or introduce all of a new concept. It would be really hard for people to understand if they were looking at my remote.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Branches are used when you want to make a new series of commits based on a new feature or idea. Clones are used when you want to copy someone's repository to your computer. Forks are just GitHub clones. They operate on GitHub, and insure that the right people get the right credit.

What is the benefit of having a copy of the last known state of the remote stored locally?
If you have the last known state of the remote stored locally, you don't have to deal with weird merge commands when syncing up the two trees.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
GitHub makes it really easy for anyone to add onto an existing project. Their changes can be reviewed by the creator, and added to the master if the creator deems them worthy. I can't really think of any situation where GitHub makes collaborating harder.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
I would make changes in a separate branch whenever I felt like I needed to add or remove a feature from someone else's fork, or if I was changing an important part of my fork/project.