What happens when you initialize a repository? Why do you need to do it?
When you initialize a repository, git creates a '.git' file in that directory. You need this file to start making commits. 

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is an intermediate between the working directory and repository. It lets you check and make sure you know what you are committing before you do it.

How can you use the staging area to make sure you have one commit per logical change?
In the staging area you can review the differences between itself, the last commit, and the working directory. This lets you make sure that you are changing one thing at a time.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches are helpful when you want to try out something new, like adding a new difficulty or adding a new language to the game. They help because you can try (sometimes risky things) without harming your original project.

How do the diagrams help you visualize the branch structure?
It's really important to know which commits have which parents. By making a diagram, the inheritance becomes clear.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches together combines the changes that were added in the two branches. It's represented that way on the diagram because the two branches are coming together to form one branch.